{"version":3,"sources":["components/Todo.js","components/NewTodoForm.js","components/TodoList.js","containers/App.js","index.js"],"names":["Todo","state","isEditing","isComplete","task","props","handleRemove","removeTodo","id","toggleForm","setState","handleChange","evt","target","value","handleSubmit","preventDefault","update","toggleCompletion","updateCompletion","this","className","onSubmit","type","onChange","onClick","Component","NewTodoForm","name","create","uuid","htmlFor","placeholder","maxLength","required","TodoList","tasks","createTodo","newTodo","filter","todo","updateTodo","updatedTask","updateTodos","map","updateComplete","todos","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a8c208e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../assets/scss/Todo.scss\";\n\nexport default class Todo extends Component {\n  state = {\n    isEditing: false,\n    isComplete: false,\n    task: this.props.task,\n  };\n\n  handleRemove = () => {\n    this.props.removeTodo(this.props.id);\n  };\n\n  toggleForm = () => {\n    this.setState({\n      isEditing: !this.state.isEditing,\n    });\n  };\n\n  handleChange = (evt) => {\n    this.setState({ task: evt.target.value });\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    this.props.update(this.props.id, this.state.task);\n    this.setState({\n      isEditing: false,\n    });\n  };\n\n  toggleCompletion = () => {\n    this.props.updateCompletion(this.props.id);\n  };\n\n  render() {\n    let result;\n\n    if (this.state.isEditing) {\n      result = (\n        <div>\n          <form className=\"Todo-form\" onSubmit={this.handleSubmit}>\n            <input\n              type=\"text\"\n              value={this.state.task}\n              onChange={this.handleChange}\n            />\n            <button>Save</button>\n          </form>\n        </div>\n      );\n    } else {\n      result = (\n        <div className=\"Todo\">\n          <li\n            className={this.props.isComplete ? \"Todo-complete\" : \"\"}\n            onClick={this.toggleCompletion}\n          >\n            {this.props.task}\n          </li>\n          <div>\n            <button className=\"Todo-edit\" onClick={this.toggleForm}>\n              Edit\n            </button>\n            <button className=\"Todo-delete\" onClick={this.handleRemove}>\n              X\n            </button>\n          </div>\n        </div>\n      );\n    }\n    return result;\n  }\n}\n","import React, { Component } from \"react\";\nimport uuid from \"uuid/v4\";\nimport \"../assets/scss/NewTodoForm.scss\";\n\nexport default class NewTodoForm extends Component {\n  state = {\n    task: \"\",\n  };\n\n  handleChange = (evt) => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    this.props.create({ ...this.state, id: uuid(), isComplete: false });\n    this.setState({ task: \"\" });\n  };\n\n  render() {\n    return (\n      <form className=\"NewTodoForm\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"newTodo\">New Todo</label>\n        <input\n          type=\"text\"\n          name=\"task\"\n          id=\"newTodo\"\n          value={this.state.task}\n          placeholder=\"Add new Todo\"\n          onChange={this.handleChange}\n          maxLength={25}\n          required\n        />\n        <button>Add Todo</button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Todo from \"./Todo\";\nimport NewTodoForm from \"./NewTodoForm\";\nimport \"../assets/scss/TodoList.scss\";\n\nexport default class TodoList extends Component {\n  state = {\n    tasks: [],\n  };\n\n  createTodo = (newTodo) => {\n    this.setState({\n      tasks: [...this.state.tasks, newTodo],\n    });\n  };\n\n  removeTodo = (id) => {\n    this.setState({ tasks: this.state.tasks.filter((todo) => todo.id !== id) });\n  };\n\n  updateTodo = (id, updatedTask) => {\n    const updateTodos = this.state.tasks.map((todo) => {\n      if (todo.id === id) {\n        return { ...todo, task: updatedTask };\n      } else {\n        return todo;\n      }\n    });\n\n    this.setState({ tasks: updateTodos });\n  };\n\n  updateCompletion = (id) => {\n    const updateComplete = this.state.tasks.map((todo) => {\n      if (todo.id === id) {\n        return { ...todo, isComplete: !todo.isComplete };\n      } else {\n        return todo;\n      }\n    });\n\n    this.setState({ tasks: updateComplete });\n  };\n\n  render() {\n    const todos = this.state.tasks.map((todo) => {\n      return (\n        <Todo\n          task={todo.task}\n          key={todo.id}\n          id={todo.id}\n          removeTodo={this.removeTodo}\n          update={this.updateTodo}\n          isComplete={todo.isComplete}\n          updateCompletion={this.updateCompletion}\n        />\n      );\n    });\n\n    return (\n      <div className=\"TodoList\">\n        <h1>\n          Todo List<span>A simple react todo list</span>\n        </h1>\n        <NewTodoForm create={this.createTodo} />\n        <ul>{todos}</ul>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport TodoList from \"../components/TodoList\";\nimport \"../assets/scss/App.scss\";\n\nconst App = () => {\n  return (\n    <div>\n      <TodoList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}