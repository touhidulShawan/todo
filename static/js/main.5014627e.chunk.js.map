{"version":3,"sources":["components/Todo.js","components/NewTodoForm.js","components/TodoList.js","containers/App.js","index.js"],"names":["Todo","state","isEditing","isComplete","task","_this","props","handleRemove","removeTodo","id","toggleForm","setState","handleChange","evt","target","value","handleSubmit","preventDefault","update","toggleCompletion","updateCompletion","this","react_default","a","createElement","className","onSubmit","type","onChange","onClick","Component","NewTodoForm","Object","defineProperty","name","create","objectSpread","uuid","htmlFor","placeholder","required","TodoList","tasks","createTodo","newTodo","concat","toConsumableArray","filter","todo","updateTodo","updatedTask","updateTodos","map","updateComplete","_this2","todos","Todo_Todo","key","NewTodoForm_NewTodoForm","App","TodoList_TodoList","ReactDOM","render","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.5014627e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../assets/css/Todo.min.css\"\n\nexport default class Todo extends Component {\n  state = {\n    isEditing: false,\n    isComplete: false,\n    task: this.props.task\n  };\n\n  handleRemove = () => {\n    this.props.removeTodo(this.props.id);\n  };\n\n  toggleForm = () => {\n    this.setState({\n      isEditing: !this.state.isEditing\n    });\n  };\n\n  handleChange = evt => {\n    this.setState({ task: evt.target.value });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    this.props.update(this.props.id, this.state.task);\n    this.setState({\n      isEditing: false\n    });\n  };\n\n  toggleCompletion = () => {\n    this.props.updateCompletion(this.props.id)\n  }\n\n  render() {\n    let result;\n\n    if (this.state.isEditing) {\n      result = (\n        <div>\n          <form className=\"Todo-form\" onSubmit={this.handleSubmit}>\n            <input\n              type=\"text\"\n              value={this.state.task}\n              onChange={this.handleChange}\n            />\n            <button>Save</button>\n          </form>\n        </div>\n      );\n    } else {\n      result = (\n        <div className=\"Todo\">\n          <li className={this.props.isComplete ? \"Todo-complete\" : \"\"} onClick={this.toggleCompletion}>{this.props.task}</li>\n          <div>\n            <button className=\"Todo-edit\" onClick={this.toggleForm}>Edit</button>\n          <button className=\"Todo-delete\" onClick={this.handleRemove}>X</button>\n          </div>\n        </div>\n      );\n    }\n    return result;\n  }\n}\n","import React, { Component } from \"react\";\nimport uuid from \"uuid/v4\";\nimport \"../assets/css/NewTodoForm.min.css\"\n\nexport default class NewTodoForm extends Component {\n  state = {\n    task: \"\"\n  };\n\n  handleChange = evt => {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    this.props.create({ ...this.state, id: uuid(), isComplete:false });\n    this.setState({ task: \"\" });\n  };\n\n  render() {\n    return (\n      <form className=\"NewTodoForm\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"newTodo\">New Todo</label>\n        <input\n          type=\"text\"\n          name=\"task\"\n          id=\"newTodo\"\n          value={this.state.task}\n          placeholder=\"Add new Todo\"\n          onChange={this.handleChange}\n          required\n        />\n        <button>Add Todo</button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Todo from \"./Todo\";\nimport NewTodoForm from \"./NewTodoForm\";\nimport \"../assets/css/TodoList.min.css\";\n\nexport default class TodoList extends Component {\n  state = {\n    tasks: []\n  };\n\n  createTodo = newTodo => {\n    this.setState({\n      tasks: [...this.state.tasks, newTodo]\n    });\n  };\n\n  removeTodo = id => {\n    this.setState({ tasks: this.state.tasks.filter(todo => todo.id !== id) });\n  };\n\n  updateTodo = (id, updatedTask) => {\n    const updateTodos = this.state.tasks.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, task: updatedTask };\n      } else {\n        return todo;\n      }\n    });\n\n    this.setState({ tasks: updateTodos });\n  };\n\n  updateCompletion = (id) => {\n    const updateComplete = this.state.tasks.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, isComplete: !todo.isComplete };\n      } else {\n        return todo;\n      }\n    });\n\n    this.setState({ tasks: updateComplete });\n  };\n\n  render() {\n    const todos = this.state.tasks.map(todo => {\n      return (\n        <Todo\n          task={todo.task}\n          key={todo.id}\n          id={todo.id}\n          removeTodo={this.removeTodo}\n          update={this.updateTodo}\n          isComplete = {todo.isComplete}\n          updateCompletion={this.updateCompletion}\n        />\n      );\n    });\n\n    return (\n      <div className=\"TodoList\">\n        <h1>Todo List<span>A simple react todo list</span></h1>\n        <NewTodoForm create={this.createTodo} />\n        <ul>{todos}</ul>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport TodoList from \"../components/TodoList\";\nimport \"../assets/css/App.min.css\";\nconst App = () => {\n  return (\n    <div>\n      <TodoList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}